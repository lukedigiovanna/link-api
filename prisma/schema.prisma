generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id                               Int        @id @default(autoincrement())
  user_id                          String?
  body                             String?
  created_at                       DateTime   @default(now()) @db.Timestamp(6)
  is_reply                         Boolean?
  user                            User?      @relation("postsTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reactions                        Reaction[] @relation("postsToreactions")
  replies_postsToreplies_parent_id Replies[]  @relation("postsToreplies_parent_id")
  replies_postsToreplies_post_id   Replies[]  @relation("postsToreplies_post_id")

  @@map("posts")
}

model Reaction {
  id       Int      @id @default(autoincrement())
  post_id  Int?
  user_id  String?
  reaction Emotion?
  posts    Post?    @relation("postsToreactions", fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users    User?    @relation("reactionsTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("reactions")
}

model Replies {
  id                             Int   @id @default(autoincrement())
  post_id                        Int?
  parent_id                      Int?
  posts_postsToreplies_parent_id Post? @relation("postsToreplies_parent_id", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  posts_postsToreplies_post_id   Post? @relation("postsToreplies_post_id", fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("replies")
}

model User {
  id        String     @id
  username  String?    @unique
  posts     Post[]     @relation("postsTousers")
  reactions Reaction[] @relation("reactionsTousers")

  @@map("users")
}

enum Emotion {
  like
  dislike
  love
  haha
  wow
  sad
  angry

  @@map("emotion")
}
